#BlueJ class context
comment0.target=Card
comment0.text=\r\n\ Abstract\ class\ for\ the\ Tourist,\ Business\ and\ Staff\ cards\r\n\ which\ contains\ the\ data\ which\ is\ common\ to\ all\ of\ them\r\n\ \r\n\ @author\ C.\ Wren\r\n\ @version\ 03/12/2018\r\n
comment1.params=name\ rating\ credits
comment1.target=Card(java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ 'Card'\ class\r\n\ @param\ name\ -\ Name\ of\ the\ owner\ of\ the\ card\r\n\ @param\ rating\ -\ the\ luxury\ rating\ of\ the\ card\r\n\ @param\ credits\ -\ the\ number\ of\ credits\ to\ initially\ set\ the\ card\ up\ with\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Prints\ details\ of\ the\ card\ to\ the\ screen\ \r\n\ @return\ details\ of\ the\ card\ to\ the\ screen\ as\ a\ string\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Returns\ the\ name\ of\ the\ owner\ of\ the\ card\r\n\ @return\ a\ string\ of\ the\ owner\ of\ the\ card\r\n
comment3.params=
comment3.target=int\ getId()
comment3.text=\r\n\ Returns\ an\ integer\ of\ the\ ID\ of\ the\ card\r\n\ @return\ an\ integer\ of\ the\ ID\ of\ the\ card\r\n
comment4.params=
comment4.target=int\ getRating()
comment4.text=\r\n\ Returns\ an\ integer\ of\ the\ rating\ of\ the\ card\r\n\ @return\ an\ integer\ of\ the\ rating\ of\ the\ card\r\n
comment5.params=
comment5.target=int\ getCredits()
comment5.text=\r\n\ Returns\ an\ integer\ of\ the\ number\ of\ credits\ on\ the\ card\r\n\ @return\ an\ integer\ of\ the\ number\ of\ credits\ on\ the\ card\r\n
comment6.params=cr
comment6.target=void\ addCredits(int)
comment6.text=\r\n\ Adds\ a\ specified\ number\ of\ credits\ to\ the\ card\r\n\ @param\ cr\ an\ integer\ of\ the\ number\ of\ credits\ to\ add\ to\ the\ card\r\n
comment7.params=cr
comment7.target=void\ deductCredits(int)
comment7.text=\r\n\ Removes\ a\ specified\ number\ of\ credits\ from\ the\ card\r\n\ @param\ cr\ an\ integer\ of\ the\ number\ of\ credits\ to\ reduce\ from\ the\ card\r\n
comment8.params=
comment8.target=boolean\ hasEnoughCredits()
comment8.text=\r\n\ Returns\ true\ if\ the\ card\ has\ enough\ credits\ to\ make\ a\ journey.\r\n\ If\ not\ defined\ in\ the\ subclass\ then\ it\ was\ decided\ that\r\n\ the\ default\ behaviour\ should\ be\ to\ allow\ the\ journey,\ for\r\n\ example\ in\ the\ case\ of\ staff.\r\n\ @return\ true\ if\ the\ card\ has\ enough\ credits\ to\ make\ a\ journey.\r\n
comment9.params=
comment9.target=void\ enterShuttle()
comment9.text=\r\n\ Abstract\ method\ for\ 'enterShuttle'\ not\ defined\ here\ but\ required\ as\ \r\n\ each\ card\ will\ require\ different\ logic\ when\ entering\ a\ shuttle\r\n
numComments=11
