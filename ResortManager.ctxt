#BlueJ class context
comment0.target=ResortManager
comment0.text=This\ class\ implements\ the\ ResortControl\ interface\r\n\r\n\ @author\ A.A.Marczyk\ \r\n\ @version\ 09/11/18\r\n\ \r\n\ @author\ C.\ Wren\r\n\ @version\ 04/12/2018\r\n\ \r\n
comment1.params=location
comment1.target=ResortManager(java.lang.String)
comment10.params=id
comment10.target=void\ moveHome(int)
comment10.text=\ Moves\ a\ card\ directly\ back\ to\ the\ home\ world\ without\ affecting\ credits\r\n\ \ and\ not\ using\ existing\ shuttles\r\n
comment11.params=id
comment11.target=void\ convertPoints(int)
comment11.text=\ Converts\ a\ business\ card's\ loyalty\ points\ into\ credits\r\n\ @param\ tr\ the\ id\ of\ the\ card\ whose\ points\ are\ to\ be\ converted\r\n
comment12.params=
comment12.target=void\ evacuateAll()
comment12.text=\ In\ an\ emergency,\ evacuates\ all\ cards\ directly\ back\ to\ the\ home\ world\ without\ \r\n\ affecting\ credits\ or\ other\ information\ and\ not\ using\ existing\ shuttles\r\n
comment13.params=cardId
comment13.target=boolean\ assertValidCard(int)
comment13.text=\r\n\ Returns\ 'true'\ if\ the\ card\ is\ on\ the\ system,\ otherwise\ return\ 'false'\r\n\ @param\ cardId\ -\ an\ integer\ representing\ a\ card\r\n\ @return\ 'true'\ if\ the\ card\ is\ on\ the\ system,\ otherwise\ return\ 'false'\r\n
comment14.params=cardObj
comment14.target=boolean\ assertBusinessCard(Card)
comment14.text=\r\n\ Returns\ 'true'\ if\ the\ card\ is\ of\ the\ specified\ type,\ otherwise\ 'false'\r\n\ @param\ cardObj\ -\ a\ string\ representing\ the\ type\ of\ card\ required\r\n\ @return\ 'true'\ if\ the\ card\ is\ of\ the\ specified\ type,\ otherwise\ 'false'\r\n
comment15.params=shtlCode
comment15.target=boolean\ assertValidShuttle(java.lang.String)
comment15.text=\r\n\ Returns\ 'true'\ if\ the\ shuttle\ is\ on\ the\ system,\ otherwise\ return\ 'false'\r\n\ @param\ shtlCode\ -\ a\ string\ representing\ a\ shuttle\ code\r\n\ @return\ 'true'\ if\ the\ shuttle\ is\ on\ the\ system,\ otherwise\ return\ 'false'\r\n
comment16.params=cardId\ shtlCode
comment16.target=boolean\ assertValidCardAndWorld(int,\ java.lang.String)
comment16.text=\r\n\ Combines\ 'assertValidCard'\ and\ 'assertValidShuttle'\ functions,\ returning\ 'true'\ if\ they\ are\ both\ true,\ otherwise\ 'false'.\r\n\ @param\ cardId\ -\ an\ integer\ representing\ a\ card\r\n\ @param\ shtlCode\ -\ a\ string\ representing\ a\ shuttle\ code\r\n\ @return\ 'true'\ if\ they\ are\ both\ true,\ otherwise\ 'false'.\r\n
comment17.params=
comment17.target=void\ loadWorlds()
comment18.params=
comment18.target=void\ setUpShuttles()
comment19.params=
comment19.target=void\ loadCards()
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Returns\ all\ of\ the\ details\ of\ all\ worlds\ including\ the\ cards\r\n\ currently\ on\ each\ world,\ or\ "No\ cards"\r\n\ @return\ all\ of\ the\ details\ of\ all\ worlds\ including\ location\ \r\n\ and\ all\ cards\ currently\ on\ each\ world,\ or\ "No\ cards"\ \r\n
comment20.params=
comment20.target=void\ allCardsHome()
comment20.text=\r\n\ Sends\ all\ cards\ to\ the\ 'home'\ world.\r\n
comment21.params=
comment21.target=void\ clearAllCards()
comment21.text=\r\n\ Clears\ all\ cards\ from\ all\ worlds.\r\n
comment22.params=id
comment22.target=Card\ getCard(int)
comment22.text=\ Returns\ the\ card\ with\ the\ card\ id\ specified\ by\ the\ parameter\r\n\ @return\ the\ card\ with\ the\ specified\ name\r\n
comment23.params=id
comment23.target=World\ getWorldFromId(int)
comment23.text=\ Returns\ the\ world\ with\ the\ world\ id\ specified\ by\ the\ parameter\r\n\ @return\ the\ world\ with\ the\ specified\ name\r\n
comment24.params=worldName
comment24.target=World\ getWorldFromName(java.lang.String)
comment24.text=\ Returns\ the\ world\ with\ the\ name\ specified\ by\ the\ parameter\r\n\ @return\ the\ world\ with\ the\ specified\ name\r\n
comment25.params=shut
comment25.target=Shuttle\ getShuttle(java.lang.String)
comment25.text=\ Returns\ the\ shuttle\ with\ the\ name\ specified\ by\ the\ parameter\r\n\ @return\ the\ shuttle\ with\ the\ specified\ name\r\n
comment3.params=
comment3.target=java.lang.String\ getAllCardsOnAllWorlds()
comment3.text=Returns\ a\ String\ representation\ of\ all\ the\ cards\ on\ all\ worlds\r\n\ @return\ a\ String\ representation\ of\ all\ cards\ on\ all\ worlds\r\n
comment4.params=tr
comment4.target=java.lang.String\ findCard(int)
comment4.text=Returns\ the\ name\ of\ the\ world\ which\ contains\ the\ specified\ card\ or\ null\r\n\ @param\ tr\ -\ the\ specified\ card\r\n\ @return\ the\ name\ of\ the\ World\ which\ contains\ the\ card,\ or\ null\r\n
comment5.params=ww
comment5.target=int\ getWorldNumber(java.lang.String)
comment5.text=\ Given\ the\ name\ of\ a\ world,\ returns\ the\ world\ id\ number\r\n\ or\ -1\ if\ world\ does\ not\ exist\r\n\ @param\ name\ of\ world\r\n\ @return\ id\ number\ of\ world\r\n
comment6.params=world
comment6.target=java.lang.String\ getAllCardsOnWorld(java.lang.String)
comment6.text=Returns\ a\ String\ representation\ of\ all\ the\ cards\ on\ specified\ world\r\n\ @param\ world\ -\ name\ of\ world\r\n\ @return\ a\ String\ representation\ of\ all\ cards\ on\ specified\ world\r\n
comment7.params=trId\ shtlCode
comment7.target=boolean\ canTravel(int,\ java.lang.String)
comment7.text=Returns\ true\ if\ a\ Card\ is\ allowed\ to\ move\ using\ the\ shuttle,\ false\ otherwise\r\n\ A\ move\ can\ be\ made\ if\:\ \ \r\n\ the\ rating\ of\ the\ card\ \ >\=\ the\ rating\ of\ the\ destination\ world\r\n\ AND\ the\ destination\ world\ is\ not\ full\r\n\ AND\ the\ card\ has\ sufficient\ credits\r\n\ AND\ the\ card\ is\ currently\ in\ the\ source\ world\r\n\ AND\ the\ card\ id\ is\ for\ a\ card\ on\ the\ system\r\n\ AND\ the\ shuttle\ code\ is\ the\ code\ for\ a\ shuttle\ on\ the\ system\r\n\ @param\ trId\ is\ the\ id\ of\ the\ card\ requesting\ the\ move\r\n\ @param\ shtlCode\ is\ the\ code\ of\ the\ shuttle\ journey\ by\ which\ the\ card\ wants\ to\ pCardel\r\n\ @return\ true\ if\ the\ card\ is\ allowed\ on\ the\ shuttle\ journey,\ false\ otherwise\ \r\n
comment8.params=pCardId\ shtlCode
comment8.target=java.lang.String\ travel(int,\ java.lang.String)
comment8.text=Returns\ the\ result\ of\ a\ card\ requesting\ to\ move\ by\ Shuttle.\r\n\ A\ move\ will\ be\ successful\ if\:\ \ \r\n\ the\ luxury\ rating\ of\ the\ card\ \ >\=\ the\ luxury\ rating\ of\ the\ destination\ world\r\n\ AND\ the\ destination\ world\ is\ not\ full\r\n\ AND\ the\ card\ has\ sufficient\ credits\r\n\ AND\ the\ card\ is\ currently\ in\ the\ source\ world\r\n\ AND\ the\ card\ id\ is\ for\ a\ card\ on\ the\ system\r\n\ AND\ the\ shuttle\ code\ is\ the\ code\ for\ a\ shuttle\ on\ the\ system\r\n\ If\ the\ shuttle\ journey\ can\ be\ made,\ the\ card\ information\ is\ removed\ from\ the\ source\r\n\ world,\ added\ to\ the\ destination\ world\ and\ a\ suitable\ message\ returned.\r\n\ If\ shuttle\ journey\ cannot\ be\ made,\ the\ state\ of\ the\ system\ remains\ unchanged\r\n\ and\ a\ message\ specifying\ the\ reason\ is\ returned.\r\n\ @param\ pCardId\ is\ the\ id\ of\ the\ card\ requesting\ the\ move\r\n\ @param\ shtlCode\ is\ the\ code\ of\ the\ shuttle\ journey\ by\ which\ the\ card\ wants\ to\ pCardel\r\n\ @return\ a\ String\ giving\ the\ result\ of\ the\ request\ \r\n
comment9.params=id\ creds
comment9.target=void\ topUpCredits(int,\ int)
comment9.text=\ Allows\ a\ card\ to\ top\ up\ their\ credits.This\ method\ is\ not\ concerned\ with\ \r\n\ \ the\ cost\ of\ a\ credit\ as\ currency\ and\ prices\ may\ vary\ between\ resorts.\r\n\ \ \r\n\ \ N.B.\ because\ this,\ 'moveHome'\ and\ 'convertPoints'\ are\ all\ mutators\ \r\n\ \ which\ return\ 'void',\ error\ checking\ has\ been\ completed\ on\ this\ side\r\n\ \ and\ the\ client\ side;\ no\ error\ message\ can\ be\ returned\ from\ the\ functions,\ and\ \r\n\ \ it\ cannot\ be\ assumed\ that\ the\ user\ will\ be\ using\ a\ CLI\ to\ access\ these\ and\r\n\ \ therefore\ see\ any\ prints\ to\ screen.\r\n\ \ \r\n\ \ @param\ id\ the\ id\ of\ the\ card\ toping\ up\ their\ credits\r\n\ \ @param\ creds\ the\ number\ of\ credits\ purchased\ to\ be\ added\ to\ cards\ information\r\n
numComments=26
